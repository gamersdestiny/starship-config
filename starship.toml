format = """
$username(bold yellow)$hostname
$directory\
$fill\
$rust\
$git_branch\
$git_status\
$package\
$golang\
$terraform\
$docker_context\
$python\
$docker_context\
$nodejs\
$cmd_duration \
$jobs \
$time 
$character
"""
# $status
[fill]
symbol = " "

[username]
style_user = "green bold"
style_root = "red bold"
format = "[$user]($style) "
disabled = false
show_always = true

[hostname]
ssh_only = false
format = 'on  [MacBook-Pro-14](bold yellow) '
trim_at = "."
disabled = false

# Replace the "❯" symbol in the prompt with "➜"
[character]                            # The name of the module we are configuring is "character"
success_symbol = "[─❯](bold green)"   # The "success_symbol" segment is being set to "➜" with the color "bold green"
error_symbol = "[✗](bold red)"

[status]
symbol = "[✗](bold red)"
style = "bold red"
success_symbol = "[_](bold green)"
format = '[$symbol$status$common_meaning$signal_name$maybe_int]($style) '
map_symbol = true
disabled = false

#  
# configure directory
[directory]
truncation_length = 8
read_only = " 🔒"
truncate_to_repo = false # truncates directory to root folder if in github repo
style = "bold italic blue"
home_symbol = "~"

[cmd_duration]
min_time = 4
show_milliseconds = false
disabled = false
style = "bold italic red"
format = 'took [$duration]($style)'

[aws]
symbol = "  "

[conda]
symbol = " "

[dart]
symbol = " "

#[directory]
#read_only = " "

[docker_context]
symbol = " "
format = "via [$symbol$context]($style) "
style = "blue bold"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false

[elixir]
symbol = " "

[elm]
symbol = " "

[git_branch]
symbol = " "

[golang]
symbol = " "

[hg_branch]
symbol = " "

[java]
symbol = " "

[julia]
symbol = " "

[memory_usage]
symbol = " "

[nim]
symbol = " "

[nix_shell]
symbol = " "

[package]
symbol = " "

[perl]
symbol = " "

[php]
symbol = " "

[python]
symbol = " "
#pyenv_version_name = true
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

[ruby]
symbol = " "

[rust]
symbol = " "

[scala]
symbol = " "

[shlvl]
symbol = " "

[swift]
symbol = "ﯣ "

[nodejs]
format = "[  $version](bold green) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]

[time]
format = "at [$time]($style) "
